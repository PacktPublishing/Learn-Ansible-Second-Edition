---
# Application and Resource Configuration
##################################################

debug_output: true

app:
  name: "learnansible" # don't get too creative
  region: "eu-west-1" # loction of where the resources are to be created
  env: "prod" # enviroment tag for the app
  public_dns_name: "learnansible" # the public dns name for the app

# Resource Names
##################################################

vpc_name: "{{ app.name }}-{{ app.env }}-{{ playbook_dict.vpc }}"
internet_gateway_name: "{{ app.name }}-{{ app.env }}-{{ playbook_dict.internet_gateway }}"
internet_gateway_route_name: "{{ internet_gateway_name }}-{{ playbook_dict.route }}"

# VPC and Subnets Configuration
##################################################

vpc:
  cidr_block: "10.0.0.0/23" # This must be at least a /23 or larger for the subnets to be created
  dns_hostnames: true
  dns_support: true
  subnet_size: "27"
  subnets:
    - name: "ec2"
      role: "{{ subnet_role_compute }}"
    - name: "rds"
      role: "{{ subnet_role_database }}"
    - name: "efs"
      role: "{{ subnet_role_storage }}"
    - name: "dmz"
      role: "{{ subnet_role_public }}"

subnet_role_compute: "compute"
subnet_role_database: "database"
subnet_role_storage: "storage"
subnet_role_public: "public"

# Security Group Configuration
##################################################

security_groups:
  - name: "{{ app.name  }}-elb-{{ playbook_dict.security_group }}"
    description: "opens port 80 and 443 to the world"
    id_var_name: "elb_group_id"
    rules:
      - proto: "tcp"
        from_port: "80"
        to_port: "80"
        cidr_ip: "0.0.0.0/0"
        rule_desc: "allow all on port 80"
      - proto: "tcp"
        from_port: "443"
        to_port: "443"
        cidr_ip: "0.0.0.0/0"
        rule_desc: "allow all on port 443"
  - name: "{{ app.name }}-ec2-{{ playbook_dict.security_group }}"
    description: "opens port 22 to a trusted IP and port 80 to the elb group"
    id_var_name: "ec2_group_id"
    rules:
      - proto: "tcp"
        from_port: "22"
        to_port: "22"
        cidr_ip: "{{ your_public_ip }}"
        rule_desc: "allow {{ your_public_ip }} access to port 22"
      - proto: "tcp"
        from_port: "80"
        to_port: "80"
        group_id: "{{ elb_group_id | default('') }}"
        rule_desc: "allow access to port 80 from ELB"
  - name: "{{ app.name }}-rds-{{ playbook_dict.security_group }}"
    description: "opens port 3306 to the ec2 instances"
    id_var_name: "rds_group_id"
    rules:
      - proto: "tcp"
        from_port: "3306"
        to_port: "3306"
        group_id: "{{ ec2_group_id | default('') }}"
        rule_desc: "allow {{ ec2_group_id | default('') }} access to port 3306"
  - name: "{{ app.name }}-efs-{{ playbook_dict.security_group }}"
    description: "opens port 2049 to the ec2 instances"
    id_var_name: "efs_group_id"
    rules:
      - proto: "tcp"
        from_port: "2049"
        to_port: "2049"
        group_id: "{{ ec2_group_id | default('') }}"
        rule_desc: "allow {{ ec2_group_id | default('') }} access to port 2049"

# Dictionary
##################################################

playbook_dict:
  deployedBy: "Ansible"
  ansible_warning: "Resource managed by Ansible"
  vpc: "vpc"
  subnet: "subnet"
  internet_gateway: "internet-gateway"
  route: "route"
  security_group: "security-group"

# AWS Configuration, some defaults from other variables
##################################################

region: "{{ app.region }}"
