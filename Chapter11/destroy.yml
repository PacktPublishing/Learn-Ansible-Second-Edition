---

- name: "Destroy the AWS Environment created by the site.yml playbook"
  hosts: localhost
  connection: local
  gather_facts: true
  vars:
    state: "absent"
    your_public_ip: ""

  vars_files:
    - group_vars/common.yml

  tasks:

    - name: "Delete the Auto Scaling Group"
      community.aws.ec2_asg:
        region: "{{ region }}"
        state: "{{ state }}"
        name: "{{ asg_name }}"

    - name: "Delete the Launch Template"
      community.aws.ec2_launch_template:
        region: "{{ region }}"
        state: "{{ state }}"
        name: "{{ launch_template_name }}"

    - name: "Get information about the AMIs"
      amazon.aws.ec2_ami_info:
        region: "{{ region }}"
        filters:
          "tag:projectName": "{{ app.name }}"
          "tag:environment": "{{ app.env }}"
          "tag:deployedBy": "{{ playbook_dict.deployedBy }}"
          "tag:description": "{{ playbook_dict.ansible_warning }}"
      register: amis_to_delete
  
    - name: "Delete the AMI(s)"
      amazon.aws.ec2_ami:
        region: "{{ region }}"
        state: "{{ state }}"
        image_id: "{{ item.image_id }}"
        delete_snapshot: true
      with_items: "{{ amis_to_delete.images }}"

    - name: "Create a SSH Key Pair"
      amazon.aws.ec2_key:
        region: "{{ region }}"
        state: "{{ state }}"
        name: "{{ ec2.keypair.name }}"

    - name: "Delete the group_vars/generated_aws_endpoints.yml file"
      file:
        path: "group_vars/generated_aws_endpoints.yml"
        state: "{{ state }}"

    - name: "Delete the RDS database"
      amazon.aws.rds_instance:
        id: "{{ rds_name }}"
        region: "{{ region }}"
        state: "{{ state }}"
        skip_final_snapshot: true

    - name: "Delete RDS subnet group"
      amazon.aws.rds_subnet_group:
        name: "{{ rds_name }}"
        region: "{{ region }}"
        state: "{{ state }}"

    - name: "Delete the group_vars/generated_rds_passwordfile file"
      file:
        path: "group_vars/generated_rds_passwordfile"
        state: "{{ state }}"

    - name: "Delete the EFS File System"
      community.aws.efs:
        name: "{{ efs_name }}"
        region: "{{ region }}"
        state: "{{ state }}"

    - name: "Delete the group_vars/generated_efs_targets.yml file"
      file:
        path: "group_vars/generated_efs_targets.yml"
        state: "{{ state }}"

    - name: "Delete the application elastic load balancer"
      amazon.aws.elb_application_lb:
        region: "{{ region }}"
        name: "{{ elb_name }}"
        state: "{{ state }}"

    - name: "Delete the target group"
      community.aws.elb_target_group:
        name: "{{ elb_target_group_name }}"
        region: "{{ region }}"
        state: "{{ state }}"

    - name: "Create a reversed list of the security group names"
      set_fact:
        security_groups_names_reversed: "{{ security_groups | map(attribute='name') | list | reverse }}"

    - name: "Delete the security groups"
      amazon.aws.ec2_security_group:
        name: "{{ item }}"
        region: "{{ region }}"
        state: "{{ state }}"
      with_items: "{{ security_groups_names_reversed }}"
      register: delete_security_groups
      until: "delete_security_groups is not failed"
      retries: 50
      delay: 2

    - name: "Get information about the VPC"
      amazon.aws.ec2_vpc_net_info:
        region: "{{ region }}"
        filters: 
          "tag:Name": "{{ vpc_name }}"
      register: the_vpc

    - name: "Get information about the Route Table"
      amazon.aws.ec2_vpc_route_table_info:
        region: "{{ region }}"
        filters: 
          "vpc-id": "{{ the_vpc.vpcs[0].id }}"
      register: the_route_tables
      when: the_vpc.vpcs | length > 0

    - name: "Delete the Route Table"
      amazon.aws.ec2_vpc_route_table:
        route_table_id: "{{ item.route_table_id }}"
        vpc_id: "{{ the_vpc.vpcs[0].id }}"
        region: "{{ region }}"
        lookup: "id"
        state: "{{ state }}"
      when: the_vpc.vpcs | length > 0 and item.associations[0].main != true
      with_items: "{{ the_route_tables.route_tables }}"

    - name: "Delete the Internet Gateway"
      amazon.aws.ec2_vpc_igw:
        vpc_id: "{{ the_vpc.vpcs[0].id }}"
        region: "{{ region }}"
        state: "{{ state }}"
      when: the_vpc.vpcs | length > 0

    - name: "Get information on the subnets"
      amazon.aws.ec2_vpc_subnet_info:
        region: "{{ region }}"
        filters: 
          "vpc-id": "{{ the_vpc.vpcs[0].id }}"
      register: the_subnets
      when: the_vpc.vpcs | length > 0

    - name: "Delete the subnets"
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ the_vpc.vpcs[0].id }}"
        region: "{{ region }}"
        state: "{{ state }}"
        cidr: "{{ item.cidr_block }}"
      with_items: "{{ the_subnets.subnets }}"
      when: the_vpc.vpcs | length > 0

    - name: "Delete the VPC"
      amazon.aws.ec2_vpc_net:
        vpc_id: "{{ the_vpc.vpcs[0].id }}"
        region: "{{ region }}"
        state: "{{ state }}"
      when: the_vpc.vpcs | length > 0